# 개근상을 받을 수 없는 사람 : 지각 두 번 이상, 결석 세번 연속
# 즉, 지각이 1회 이하이거나 결석이 연속 2회 이하이면 개근상 가능
# 점화식에 영향을 미치는 요인 : 몇 일째 나왔는지, 지각이 몇번인지, 결석을 연속으로 몇 번 했는지

# DP[N][i][j] = N일 동안 총 i번 지각하고, 연속 결석한 횟수가 j

# 나올 수 있는 상태는 6가지
# 지각 0번 연속 결석 0번
# 지각 0번 연속 결석 1번
# 지각 0번 연속 결석 2번
# 지각 1번 연속 결석 0번 -> 지각 한번 한 상태에서 출석 하거나, 지각 0번 한 상태에서 지각하는 경우
# 지각 1번 연속 결석 1번
# 지각 1번 연속 결석 2번


N = int(input())
dp = [[[0] * 3 for _ in range(2)] for _ in range(1001)]
dp[1][0][0] = dp[1][0][1] = dp[1][1][0] = 1
for i in range(2, 1001):
    # 지각한번도 안하고 연속 결석 0번인 상태
    dp[i][0][0] = (dp[i-1][0][0] + dp[i-1][0][1] + dp[i-1][0][2]) % 1000000
    # 지각 한번도 안하고 연속 결석 1번인 상태
    dp[i][0][1] = dp[i-1][0][0]
    # 지각 한번도 안하고 연속 결석 2번인 상태
    dp[i][0][2] = dp[i-1][0][1]
    # 지각 한번 하고 연속 결석 0번인 상태
    dp[i][1][0] = (dp[i-1][1][0] + dp[i-1][1][1] + dp[i-1][1][2] + dp[i-1][0][0] + dp[i-1][0][1] + dp[i-1][0][2]) % 1000000
    # 지각 한번 하고 연속 결석 1번인 상태
    dp[i][1][1] = dp[i-1][1][0]
    # 지각 한번 하고 연속 결석 2번인 상태
    dp[i][1][2] = dp[i-1][1][1]
print((dp[N][0][0] + dp[N][0][1] + dp[N][0][2] + dp[N][1][0] + dp[N][1][1] + dp[N][1][2]) % 1000000) 